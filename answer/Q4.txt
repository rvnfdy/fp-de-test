a. Refactoring, in my mind, is a process improving code or repository of codes without changing the functionality of the codes. Some of the objectives from refactoring include making codes more readable to aid the debugging process, for example, by defining parameterised function that could be used multiple times. Another objective of refactoring can also be to make the codes more computationally efficient. I think a good time to consider refactoring is when we realise that scalability is a concern, e.g. increasing manual effort to debug, infrastructure limitation for scaling.

b. Testing, in software development, is a process to capture as many bugs as possible before getting a feature rolled out to production. This is done through writing test cases, which is basically given certain conditions, will the feature produce outcome as intended (expected outcome). There are various type of tests, for example, unit test which deals with a single component, integration test which deals with testing multiple components and whether they worked together as intended, and user acceptance testing which is more testing on the FE (portion that is visible to a user). A good practice is to always test a feature before releasing it to end users. 
